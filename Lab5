
 interface BankInterface {
    final int Bank_A=10000;
    final int Bank_B=150000;
    final int Bank_C=200000;
    
    abstract double getBalance();
    abstract void getIntrestRate();   
}

class BankA implements BankInterface{
    double balanceA;
    double IRrateA;
    double IRamtA;
    
    public void  getIntrestRate(){
    IRrateA=0.07;   
    System.out.println("The interest of this bank is:- "+IRrateA);
    }

    public double getBalance(){
        IRamtA=IRrateA*Bank_A;
        balanceA=Bank_A+IRamtA;
        return balanceA;
        
    }

    void displayinfo(){
        System.out.println("The Total balance of the Bank A acc is :- "+getBalance());
    }

}


class BankB implements BankInterface{
    double balanceB;
    double IRrateB;
    double IRamtB;

    public void  getIntrestRate(){
    IRrateB=0.074;   
    System.out.println("The interest of this bank is:- "+IRrateB);
    }

    public double getBalance(){
        IRamtB=IRrateB*Bank_B;
        balanceB=IRamtB+Bank_B;
        return balanceB;
        
    }

    void displayinfo(){
        System.out.println("The Total balance of the Bank B acc is :- "+getBalance());
    }

}


class BankC implements BankInterface{
    double balanceC;
    double IRrateC;
    double IRamtC;
    
    public void  getIntrestRate(){
    IRrateC=0.079;   
    System.out.println("The interest of this bank is:- "+IRrateC);
    }

    public double getBalance(){
        IRamtC=IRrateC*Bank_C;
        balanceC=IRamtC+Bank_C;
        return balanceC;
        
    }

    void displayinfo(){
        System.out.println("The Total balance of the Bank C acc is :- "+getBalance());
    }

}



public class Lab5 {

    public static void main(String[] args) {
        System.out.println("Object Creation for the three classes: ---------");
        BankA obj1 = new BankA();
        BankB obj2 =new BankB();
        BankC obj3 =new BankC();

        System.out.println("Method calling for each of the objects--------");
        obj1.getIntrestRate();
        obj1.displayinfo();
        System.out.println("---------------------------------------------------------");

        obj2.getIntrestRate();
        obj2.displayinfo();
        System.out.println("--------------------------------------------------------");

        obj3.getIntrestRate();
        obj3.displayinfo();
        obj3.getBalance();
    }
    
}



//Lab 5 part 2
import java.util.Scanner;

//creating our interface that hold two abstract methods 
 interface WaterConservationSystem {
   abstract double  calculatedTrappedWater();
   abstract int[] IndividualVolofBlocks();


    
}

//abstract class that implements our interface and also  has an abstract methods
abstract class RainySeasonConservation implements WaterConservationSystem {
abstract void nosofblocks();
}

//child class that inherits from abstarct class
class CityBlockConservation extends RainySeasonConservation{
    //variables that will used for calculation as well as storing values
    int width=1;
    int nos_blocks;
    int[] blockheights;
    int blockwidth;
    int vol;
    int dummyvar;
    int[] indVol;
    int totalvol;

    //this method has been used to read info from user 
    public void nosofblocks(){
        Scanner readinp =new Scanner(System.in);
        System.out.println("Enter the nos of blocks you want to calculate the volume for :  ");
        nos_blocks=readinp.nextInt();

        blockheights=new int[nos_blocks];
        System.out.println("Enter the height for each block:- ");
        for(int i=0;i<blockheights.length;i++){
            blockheights[i]=readinp.nextInt();
        }


    }

    //Calulating individual vol for each block and then storing in new array 
    public int[] IndividualVolofBlocks(){
        indVol= new int[nos_blocks];
        for(int i=0;i<blockheights.length;i++){
            indVol[i]=(width*width)*blockheights[i];
    }
        return indVol;
    }




    //Calculating total sum by adding elements from array 
    public double calculatedTrappedWater(){
        totalvol=0;
        for(int i=0;i<blockheights.length;i++){
            totalvol=totalvol+indVol[i];
        }
        return totalvol;
        
    }

    
    //method used to just display info and results from previous methods
    public void displayInfo(){
        System.out.println("The width of each block is:- ");
        System.out.println("The block Height are as Follows:- ");
        for(int i=0;i<blockheights.length;i++){
            System.out.println(blockheights[i]);
        }
        System.out.println("The tottal volume of all the blocks is :- "+calculatedTrappedWater());
    }

}
    

//main claa
public class Lab5part2 {
    public static void main(String[] args) {
        //creation of objects
        CityBlockConservation obj1= new CityBlockConservation();
        //calling of methods 
        obj1.nosofblocks();
        obj1.IndividualVolofBlocks();
        obj1.displayInfo();
        
    }

    
}
